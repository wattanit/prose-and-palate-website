---
import Base from "@/layouts/Base.astro";
import Default from "@/layouts/Default.astro";
import PostSingle from "@/layouts/PostSingle.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import type { CollectionEntry } from "astro:content";

const getPosts = (await getSinglePage("posts")) as CollectionEntry<"posts">[];
const postsSlug = getPosts.map((item) => item.id);

export async function getStaticPaths() {
  const posts = await getSinglePage("posts");
  const pages = await getSinglePage("pages");
  const allPages = [...pages, ...posts];

  const paths = allPages.map((page) => ({
    params: {
      regular: page.id.replace(/\.(md|mdx)$/, ""),
    },
    props: { page },
  }));
  return paths;
}

const { page } = Astro.props;
const { title, meta_title, description, image } = page.data;
const isPost = postsSlug.includes(page.id);

// Safely extract blog post specific properties
const date = isPost ? (page.data as any).date : undefined;
const categories = isPost ? (page.data as any).categories : undefined;
const tags = isPost ? (page.data as any).tags : undefined;
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
  date={date}
  categories={categories}
  tags={tags}
  is_post={isPost}
>
  {
    isPost ? (
      <PostSingle post={page} />
    ) : (
      <Default data={page} />
    )
  }
</Base>
